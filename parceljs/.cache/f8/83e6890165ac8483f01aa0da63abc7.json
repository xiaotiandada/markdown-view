{"id":"node_modules/highlight.js/lib/core.js","dependencies":[{"name":"/Users/xiatian/Code/markdown-view/parceljs/package.json","includedInParent":true,"mtime":1597736707676},{"name":"/Users/xiatian/Code/markdown-view/parceljs/node_modules/highlight.js/package.json","includedInParent":true,"mtime":1597734698007}],"generated":{"js":"var global = arguments[3];\n// https://github.com/substack/deep-freeze/blob/master/index.js\n/** @param {any} obj */\nfunction deepFreeze(obj) {\n  Object.freeze(obj);\n\n  var objIsFunction = typeof obj === 'function';\n\n  Object.getOwnPropertyNames(obj).forEach(function(prop) {\n    if (Object.hasOwnProperty.call(obj, prop)\n    && obj[prop] !== null\n    && (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n    // IE11 fix: https://github.com/highlightjs/highlight.js/issues/2318\n    // TODO: remove in the future\n    && (objIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\n    && !Object.isFrozen(obj[prop])) {\n      deepFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n}\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n  }\n\n  ignoreMatch() {\n    this.ignore = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  var result = {};\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/* Stream merging */\n\n/**\n * @typedef Event\n * @property {'start'|'stop'} event\n * @property {number} offset\n * @property {Node} node\n */\n\n/**\n * @param {Node} node\n */\nfunction tag(node) {\n  return node.nodeName.toLowerCase();\n}\n\n/**\n * @param {Node} node\n */\nfunction nodeStream(node) {\n  /** @type Event[] */\n  var result = [];\n  (function _nodeStream(node, offset) {\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === 3) {\n        offset += child.nodeValue.length;\n      } else if (child.nodeType === 1) {\n        result.push({\n          event: 'start',\n          offset: offset,\n          node: child\n        });\n        offset = _nodeStream(child, offset);\n        // Prevent void elements from having an end tag that would actually\n        // double them in the output. There are more void elements in HTML\n        // but we list only those realistically expected in code display.\n        if (!tag(child).match(/br|hr|img|input/)) {\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: child\n          });\n        }\n      }\n    }\n    return offset;\n  })(node, 0);\n  return result;\n}\n\n/**\n * @param {any} original - the original stream\n * @param {any} highlighted - stream of the highlighted source\n * @param {string} value - the original source itself\n */\nfunction mergeStreams(original, highlighted, value) {\n  var processed = 0;\n  var result = '';\n  var nodeStack = [];\n\n  function selectStream() {\n    if (!original.length || !highlighted.length) {\n      return original.length ? original : highlighted;\n    }\n    if (original[0].offset !== highlighted[0].offset) {\n      return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n    }\n\n    /*\n    To avoid starting the stream just before it should stop the order is\n    ensured that original always starts first and closes last:\n\n    if (event1 == 'start' && event2 == 'start')\n      return original;\n    if (event1 == 'start' && event2 == 'stop')\n      return highlighted;\n    if (event1 == 'stop' && event2 == 'start')\n      return original;\n    if (event1 == 'stop' && event2 == 'stop')\n      return highlighted;\n\n    ... which is collapsed to:\n    */\n    return highlighted[0].event === 'start' ? original : highlighted;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function open(node) {\n    /** @param {Attr} attr */\n    function attr_str(attr) {\n      return ' ' + attr.nodeName + '=\"' + escapeHTML(attr.value) + '\"';\n    }\n    // @ts-ignore\n    result += '<' + tag(node) + [].map.call(node.attributes, attr_str).join('') + '>';\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function close(node) {\n    result += '</' + tag(node) + '>';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function render(event) {\n    (event.event === 'start' ? open : close)(event.node);\n  }\n\n  while (original.length || highlighted.length) {\n    var stream = selectStream();\n    result += escapeHTML(value.substring(processed, stream[0].offset));\n    processed = stream[0].offset;\n    if (stream === original) {\n      /*\n      On any opening or closing tag of the original markup we first close\n      the entire highlighted node stack, then render the original tag along\n      with all the following original tags at the same offset and then\n      reopen all the tags on the highlighted stack.\n      */\n      nodeStack.reverse().forEach(close);\n      do {\n        render(stream.splice(0, 1)[0]);\n        stream = selectStream();\n      } while (stream === original && stream.length && stream[0].offset === processed);\n      nodeStack.reverse().forEach(open);\n    } else {\n      if (stream[0].event === 'start') {\n        nodeStack.push(stream[0].node);\n      } else {\n        nodeStack.pop();\n      }\n      render(stream.splice(0, 1)[0]);\n    }\n  }\n  return result + escapeHTML(value.substr(processed));\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  escapeHTML: escapeHTML,\n  inherit: inherit,\n  nodeStream: nodeStream,\n  mergeStreams: mergeStreams\n});\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = node.kind;\n    if (!node.sublanguage) {\n      className = `${this.classPrefix}${className}`;\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\nfunction escape(value) {\n  return new RegExp(value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  var match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {string} separator\n * @returns {string}\n */\nfunction join(regexps, separator = \"|\") {\n  // backreferenceRe matches an open parenthesis or backreference. To avoid\n  // an incorrect parse, it additionally matches the following:\n  // - [...] elements, where the meaning of parentheses and escapes change\n  // - other escape sequences, so we do not misparse escape sequences as\n  //   interesting elements\n  // - non-matching or lookahead parentheses, which do not capture. These\n  //   follow the '(' with a '?'.\n  var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n  var numCaptures = 0;\n  var ret = '';\n  for (var i = 0; i < regexps.length; i++) {\n    numCaptures += 1;\n    var offset = numCaptures;\n    var re = source(regexps[i]);\n    if (i > 0) {\n      ret += separator;\n    }\n    ret += \"(\";\n    while (re.length > 0) {\n      var match = backreferenceRe.exec(re);\n      if (match == null) {\n        ret += re;\n        break;\n      }\n      ret += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        ret += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        ret += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    ret += \")\";\n  }\n  return ret;\n}\n\n// Common regexps\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit({\n    className: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  className: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  className: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  var mode = inherit(\n    {\n      className: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push(PHRASAL_WORDS_MODE);\n  mode.contains.push({\n    className: 'doctag',\n    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',\n    relevance: 0\n  });\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  className: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  className: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst CSS_NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE + '(' +\n    '%|em|ex|ch|rem' +\n    '|vw|vh|vmin|vmax' +\n    '|cm|mm|in|pt|pc|px' +\n    '|deg|grad|rad|turn' +\n    '|s|ms' +\n    '|Hz|kHz' +\n    '|dpi|dpcm|dppx' +\n    ')?',\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  className: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  className: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IDENT_RE: IDENT_RE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  NUMBER_RE: NUMBER_RE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  COMMENT: COMMENT,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  NUMBER_MODE: NUMBER_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  CSS_NUMBER_MODE: CSS_NUMBER_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n  METHOD_GUARD: METHOD_GUARD,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n// keywords that should have no default relevance value\nvar COMMON_KEYWORDS = 'of and for in not or if then'.split(' ');\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensativility of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(join(terminators), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      const result = m.exec(s);\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) { // wrap-around\n          this.regexIndex = 0;\n        }\n      }\n\n      // this.regexIndex = 0;\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminator_end) {\n      mm.addRule(mode.terminator_end, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  // TODO: We need negative look-behind support to do this properly\n  /**\n   * Skip a match if it has a preceding or trailing dot\n   *\n   * This is used for `beginKeywords` to prevent matching expressions such as\n   * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n   * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n   * @param {RegExpMatchArray} match\n   * @param {CallbackResponse} response\n   */\n  function skipIfhasPrecedingOrTrailingDot(match, response) {\n    const before = match.input[match.index - 1];\n    const after = match.input[match.index + match[0].length];\n    if (before === \".\" || after === \".\") {\n      response.ignoreMatch();\n    }\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.compiled) return cmode;\n    mode.compiled = true;\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    let kw_pattern = null;\n    if (typeof mode.keywords === \"object\") {\n      kw_pattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    // both are not allowed\n    if (mode.lexemes && kw_pattern) {\n      throw new Error(\"ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) \");\n    }\n\n    // `mode.lexemes` was the old standard before we added and now recommend\n    // using `keywords.$pattern` to pass the keyword pattern\n    cmode.keywordPatternRe = langRe(mode.lexemes || kw_pattern || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        // for languages with keywords that include non-word characters checking for\n        // a word boundary is not sufficient, so instead we check for a word boundary\n        // or whitespace - this does no harm in any case since our keyword engine\n        // doesn't allow spaces in keywords anyways and we still check for the boundary\n        // first\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?=\\\\b|\\\\s)';\n        mode.__beforeBegin = skipIfhasPrecedingOrTrailingDot;\n      }\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (mode.endSameAsBegin) mode.end = mode.begin;\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminator_end = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminator_end) {\n        cmode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(mode.illegal);\n    // eslint-disable-next-line no-undefined\n    if (mode.relevance === undefined) mode.relevance = 1;\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expand_or_clone_mode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expand_or_clone_mode(mode) {\n  if (mode.variants && !mode.cached_variants) {\n    mode.cached_variants = mode.variants.map(function(variant) {\n      return inherit(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cached_variants) {\n    return mode.cached_variants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\n/***********************************************\n  Keywords\n***********************************************/\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string>} rawKeywords\n * @param {boolean} case_insensitive\n */\nfunction compileKeywords(rawKeywords, case_insensitive) {\n  /** @type KeywordDict */\n  var compiled_keywords = {};\n\n  if (typeof rawKeywords === 'string') { // string\n    splitAndCompile('keyword', rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(className) {\n      splitAndCompile(className, rawKeywords[className]);\n    });\n  }\n  return compiled_keywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} className\n   * @param {string} keywordList\n   */\n  function splitAndCompile(className, keywordList) {\n    if (case_insensitive) {\n      keywordList = keywordList.toLowerCase();\n    }\n    keywordList.split(' ').forEach(function(keyword) {\n      var pair = keyword.split('|');\n      compiled_keywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\nvar version = \"10.1.2\";\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\nconst escape$1 = escapeHTML;\nconst inherit$1 = inherit;\n\nconst { nodeStream: nodeStream$1, mergeStreams: mergeStreams$1 } = utils;\nconst NO_MATCH = Symbol(\"nomatch\");\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Convenience variables for build-in objects\n  /** @type {unknown[]} */\n  var ArrayProto = [];\n\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  var languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  var aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  var plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  var SAFE_MODE = true;\n  var fixMarkupRe = /(^(<[^>]+>|\\t|)+|\\n)/gm;\n  var LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  var options = {\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      var language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {Mode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignoreIllegals, continuation) {\n    /** @type {{ code: string, language: string, result?: any }} */\n    var context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    var result = context.result ?\n      context.result :\n      _highlight(context.language, context.code, ignoreIllegals, continuation);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n  */\n  function _highlight(languageName, code, ignoreIllegals, continuation) {\n    var codeToHighlight = code;\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {RegExpMatchArray} match - regexp match data\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, match) {\n      var matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(mode_buffer);\n        return;\n      }\n\n      let last_index = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(mode_buffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += mode_buffer.substring(last_index, match.index);\n        const data = keywordData(top, match);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          relevance += keywordRelevance;\n          emitter.addKeyword(match[0], kind);\n        } else {\n          buf += match[0];\n        }\n        last_index = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(mode_buffer);\n      }\n      buf += mode_buffer.substr(last_index);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (mode_buffer === \"\") return;\n      /** @type HighlightResult */\n      var result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(mode_buffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = result.top;\n      } else {\n        result = highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result.emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      mode_buffer = '';\n    }\n\n    /**\n     * @param {Mode} mode - new mode to start\n     */\n    function startNewMode(mode) {\n      if (mode.className) {\n        emitter.openNode(mode.className);\n      }\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.ignore) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexs to potentially match here, so we move the cursor forward one\n        // space\n        mode_buffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        continueScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      var lexeme = match[0];\n      var new_mode = match.rule;\n\n      const resp = new Response(new_mode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [new_mode.__beforeBegin, new_mode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.ignore) return doIgnore(lexeme);\n      }\n\n      if (new_mode && new_mode.endSameAsBegin) {\n        new_mode.endRe = escape(lexeme);\n      }\n\n      if (new_mode.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (new_mode.excludeBegin) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n          mode_buffer = lexeme;\n        }\n      }\n      startNewMode(new_mode);\n      // if (mode[\"after:begin\"]) {\n      //   let resp = new Response(mode);\n      //   mode[\"after:begin\"](match, resp);\n      // }\n      return new_mode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      var lexeme = match[0];\n      var matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      var end_mode = endOfMode(top, match, matchPlusRemainder);\n      if (!end_mode) { return NO_MATCH; }\n\n      var origin = top;\n      if (origin.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          mode_buffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== end_mode.parent);\n      if (end_mode.starts) {\n        if (end_mode.endSameAsBegin) {\n          end_mode.starts.endRe = end_mode.endRe;\n        }\n        startNewMode(end_mode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      var list = [];\n      for (var current = top; current !== language; current = current.parent) {\n        if (current.className) {\n          list.unshift(current.className);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    var lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceeding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      var lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      mode_buffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        mode_buffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error('0 width match regex');\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        var processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length;\n    }\n\n    var language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    var md = compileLanguage(language);\n    var result = '';\n    /** @type {CompiledMode} */\n    var top = continuation || md;\n    /** @type Record<string,Mode> */\n    var continuations = {}; // keep continuations for sub-languages\n    var emitter = new options.__emitter(options);\n    processContinuations();\n    var mode_buffer = '';\n    var relevance = 0;\n    var index = 0;\n    var iterations = 0;\n    var continueScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (continueScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          continueScanAtSamePosition = false;\n        } else {\n          top.matcher.lastIndex = index;\n          top.matcher.considerAll();\n        }\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: languageName,\n        illegal: false,\n        emitter: emitter,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          illegal: true,\n          illegalBy: {\n            msg: err.message,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode\n          },\n          sofar: result,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          illegal: false,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter,\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      relevance: 0,\n      emitter: new options.__emitter(options),\n      value: escape$1(code),\n      illegal: false,\n      top: PLAINTEXT_LANGUAGE\n    };\n    result.emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = justTextHighlightResult(code);\n    var secondBest = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = _highlight(name, code, false);\n      current.language = name;\n      if (current.relevance > secondBest.relevance) {\n        secondBest = current;\n      }\n      if (current.relevance > result.relevance) {\n        secondBest = result;\n        result = current;\n      }\n    });\n    if (secondBest.language) {\n      // second_best (with underscore) is the expected API\n      result.second_best = secondBest;\n    }\n    return result;\n  }\n\n  /**\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n    @param {string} html\n    @returns {string}\n  */\n  function fixMarkup(html) {\n    if (!(options.tabReplace || options.useBR)) {\n      return html;\n    }\n\n    return html.replace(fixMarkupRe, match => {\n      if (match === '\\n') {\n        return options.useBR ? '<br>' : match;\n      } else if (options.tabReplace) {\n        return match.replace(/\\t/g, options.tabReplace);\n      }\n      return match;\n    });\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {string} prevClassName\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang;\n    var result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (!prevClassName.includes(language)) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code. Accepts a DOM node and\n   * two optional parameters for fixMarkup.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightBlock(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightBlock\",\n      { block: element, language: language });\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = element.innerHTML.replace(/\\n/g, '').replace(/<br[ /]*>/g, '\\n');\n    } else {\n      node = element;\n    }\n    const text = node.textContent;\n    const result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    const originalStream = nodeStream$1(node);\n    if (originalStream.length) {\n      const resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams$1(originalStream, nodeStream$1(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    fire(\"after:highlightBlock\", { block: element, result: result });\n\n    element.innerHTML = result.value;\n    element.className = buildClassName(element.className, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relavance: result.relevance\n    };\n    if (result.second_best) {\n      element.second_best = {\n        language: result.second_best.language,\n        // TODO: remove with version 11.0\n        re: result.second_best.relevance,\n        relavance: result.second_best.relevance\n      };\n    }\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {{}} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit$1(options, userOptions);\n  }\n\n  /**\n   * Highlights to all <pre><code> blocks on a page\n   *\n   * @type {Function & {called?: boolean}}\n   */\n  const initHighlighting = () => {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  };\n\n  // Higlights all when DOMContentLoaded fires\n  function initHighlightingOnLoad() {\n    // @ts-ignore\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    var lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n\n    @param {string} name - name of the language to fetch/require\n    @returns {Language | never}\n  */\n  function requireLanguage(name) {\n    var lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    var err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}', name));\n    throw err;\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    var cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /* Interface definition */\n\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    fixMarkup,\n    highlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    requireLanguage,\n    autoDetection,\n    inherit: inherit$1,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexs into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1509,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1510,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1511,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1512,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1513,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1514,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1515,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1516,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1517,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1518,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1519,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1520,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1521,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1522,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1523,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1524,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1525,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1526,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1527,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1528,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1529,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1530,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1531,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1532,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1533,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1534,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1535,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1536,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1537,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1538,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1539,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1540,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1541,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1542,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1543,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1544,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1545,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1546,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1547,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1548,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1549,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1550,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1551,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1552,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1553,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1554,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1555,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1556,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1557,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1558,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1559,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1560,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1561,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1562,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1563,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1564,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1565,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1566,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1567,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1568,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1569,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1570,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1571,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1572,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1573,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1574,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1575,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1576,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1577,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1578,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1579,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1580,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1581,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1582,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1583,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1584,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1585,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1586,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1587,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1588,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1589,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1590,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1591,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1592,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1593,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1594,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1595,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1596,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1597,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1598,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1599,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1600,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1601,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1602,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1603,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1604,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1605,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1606,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1607,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1608,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1609,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1610,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1611,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1612,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1613,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1614,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1615,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1616,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1617,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1618,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1619,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1620,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1621,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1622,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1623,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1624,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1625,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1626,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1627,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1628,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1629,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1630,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1631,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1632,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1633,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1634,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1635,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1636,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1637,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1638,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1639,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1640,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1641,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1642,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1643,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1644,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1645,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1646,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1647,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1648,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1649,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1650,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1651,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1652,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1653,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1654,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1655,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1656,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1657,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1658,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1659,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1660,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1661,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1662,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1663,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1664,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1665,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1666,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1667,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1668,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1669,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1670,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1671,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1672,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1673,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1674,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1675,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1676,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1677,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1678,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1679,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1680,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1681,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1682,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1683,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1684,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1685,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1686,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1687,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1688,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1689,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1690,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1691,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1692,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1693,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1694,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1695,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1696,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1697,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1698,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1699,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1700,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1701,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1702,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1703,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1704,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1705,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1706,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1707,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1708,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1709,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1710,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1711,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1712,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1713,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1714,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1715,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1716,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1717,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1718,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1719,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1720,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1721,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1722,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1723,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1724,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1725,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1726,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1727,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1728,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1729,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1730,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1731,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1732,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1733,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1734,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1735,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1736,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1737,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1738,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1739,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1740,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1741,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1742,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1743,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1744,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1745,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1746,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1747,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1748,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1749,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1750,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1751,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1752,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1753,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1754,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1755,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1756,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1757,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1758,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1759,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1760,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1761,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1762,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1763,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1764,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1765,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1766,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1767,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1768,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1769,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1770,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1771,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1772,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1773,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1774,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1775,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1776,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1777,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1778,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1779,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1780,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1781,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1782,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1783,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1784,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1785,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1786,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1787,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1788,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1789,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1790,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1791,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1792,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1793,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1794,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1795,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1796,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1797,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1798,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1799,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1800,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1801,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1802,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1803,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1804,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1805,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1806,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1807,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1808,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1809,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1810,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1811,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1812,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1813,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1814,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1815,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1816,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1817,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1818,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1819,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1820,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1821,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1822,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1823,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1824,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1825,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1826,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1827,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1828,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1829,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1830,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1831,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1832,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1833,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1834,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1835,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1836,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1837,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1838,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1839,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1840,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1841,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1842,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1843,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1844,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1845,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1846,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1847,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1848,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1849,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1850,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1851,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1852,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1853,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1854,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1855,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1856,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1857,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1858,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1859,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1860,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1861,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1862,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1863,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1864,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1865,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1866,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1867,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1868,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1869,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1870,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1871,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1872,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1873,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1874,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1875,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1876,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1877,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1878,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1879,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1880,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1881,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1882,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1883,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1884,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1885,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1886,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1887,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1888,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1889,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1890,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1891,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1892,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1893,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1894,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1895,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1896,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1897,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1898,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1899,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1900,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1901,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1902,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1903,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1904,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1905,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1906,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1907,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1908,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1909,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1910,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1911,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1912,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1913,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1914,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1915,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1916,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1917,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1918,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1919,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1920,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1921,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1922,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1923,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1924,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1925,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1926,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1927,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1928,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1929,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1930,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1931,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1932,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1933,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1934,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1935,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1936,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1937,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1938,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1939,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1940,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1941,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1942,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1943,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1944,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1945,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1946,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1947,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1948,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1949,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1950,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1951,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1952,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1953,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1954,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1955,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1956,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1957,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1958,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1959,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1960,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1961,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1962,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1963,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1964,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1965,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1966,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1967,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1968,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1969,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1970,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1971,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1972,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1973,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1974,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1975,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1976,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1977,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1978,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1979,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1980,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1981,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1982,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1983,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1984,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1985,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1986,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1987,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1988,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1989,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1990,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1991,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1992,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1993,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1994,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1995,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1996,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1997,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1998,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":1999,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2000,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2001,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2002,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2003,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2004,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2005,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2006,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2007,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2008,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2009,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2010,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2011,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2012,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2013,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2014,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2015,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2016,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2017,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2018,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2019,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2020,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2021,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2022,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2023,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2024,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2025,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2026,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2027,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2028,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2029,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2030,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2031,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2032,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2033,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2034,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2035,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2036,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2037,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2038,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2039,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2040,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2041,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2042,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2043,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2044,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2045,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2046,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2047,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2048,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2049,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2050,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2051,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2052,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2053,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2054,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2055,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2056,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2057,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2058,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2059,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2060,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2061,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2062,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2063,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2064,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2065,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2066,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2067,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2068,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2069,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2070,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2071,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2072,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2073,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2074,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2075,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2076,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2077,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2078,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2079,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2080,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/highlight.js/lib/core.js","original":{"line":2081,"column":0},"generated":{"line":2082,"column":0}}],"sources":{"node_modules/highlight.js/lib/core.js":"// https://github.com/substack/deep-freeze/blob/master/index.js\n/** @param {any} obj */\nfunction deepFreeze(obj) {\n  Object.freeze(obj);\n\n  var objIsFunction = typeof obj === 'function';\n\n  Object.getOwnPropertyNames(obj).forEach(function(prop) {\n    if (Object.hasOwnProperty.call(obj, prop)\n    && obj[prop] !== null\n    && (typeof obj[prop] === \"object\" || typeof obj[prop] === \"function\")\n    // IE11 fix: https://github.com/highlightjs/highlight.js/issues/2318\n    // TODO: remove in the future\n    && (objIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\n    && !Object.isFrozen(obj[prop])) {\n      deepFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n}\n\nclass Response {\n  /**\n   * @param {CompiledMode} mode\n   */\n  constructor(mode) {\n    // eslint-disable-next-line no-undefined\n    if (mode.data === undefined) mode.data = {};\n\n    this.data = mode.data;\n  }\n\n  ignoreMatch() {\n    this.ignore = true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction escapeHTML(value) {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;');\n}\n\n/**\n * performs a shallow merge of multiple objects into one\n *\n * @template T\n * @param {T} original\n * @param {Record<string,any>[]} objects\n * @returns {T} a single new object\n */\nfunction inherit(original, ...objects) {\n  /** @type Record<string,any> */\n  var result = {};\n\n  for (const key in original) {\n    result[key] = original[key];\n  }\n  objects.forEach(function(obj) {\n    for (const key in obj) {\n      result[key] = obj[key];\n    }\n  });\n  return /** @type {T} */ (result);\n}\n\n/* Stream merging */\n\n/**\n * @typedef Event\n * @property {'start'|'stop'} event\n * @property {number} offset\n * @property {Node} node\n */\n\n/**\n * @param {Node} node\n */\nfunction tag(node) {\n  return node.nodeName.toLowerCase();\n}\n\n/**\n * @param {Node} node\n */\nfunction nodeStream(node) {\n  /** @type Event[] */\n  var result = [];\n  (function _nodeStream(node, offset) {\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      if (child.nodeType === 3) {\n        offset += child.nodeValue.length;\n      } else if (child.nodeType === 1) {\n        result.push({\n          event: 'start',\n          offset: offset,\n          node: child\n        });\n        offset = _nodeStream(child, offset);\n        // Prevent void elements from having an end tag that would actually\n        // double them in the output. There are more void elements in HTML\n        // but we list only those realistically expected in code display.\n        if (!tag(child).match(/br|hr|img|input/)) {\n          result.push({\n            event: 'stop',\n            offset: offset,\n            node: child\n          });\n        }\n      }\n    }\n    return offset;\n  })(node, 0);\n  return result;\n}\n\n/**\n * @param {any} original - the original stream\n * @param {any} highlighted - stream of the highlighted source\n * @param {string} value - the original source itself\n */\nfunction mergeStreams(original, highlighted, value) {\n  var processed = 0;\n  var result = '';\n  var nodeStack = [];\n\n  function selectStream() {\n    if (!original.length || !highlighted.length) {\n      return original.length ? original : highlighted;\n    }\n    if (original[0].offset !== highlighted[0].offset) {\n      return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n    }\n\n    /*\n    To avoid starting the stream just before it should stop the order is\n    ensured that original always starts first and closes last:\n\n    if (event1 == 'start' && event2 == 'start')\n      return original;\n    if (event1 == 'start' && event2 == 'stop')\n      return highlighted;\n    if (event1 == 'stop' && event2 == 'start')\n      return original;\n    if (event1 == 'stop' && event2 == 'stop')\n      return highlighted;\n\n    ... which is collapsed to:\n    */\n    return highlighted[0].event === 'start' ? original : highlighted;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function open(node) {\n    /** @param {Attr} attr */\n    function attr_str(attr) {\n      return ' ' + attr.nodeName + '=\"' + escapeHTML(attr.value) + '\"';\n    }\n    // @ts-ignore\n    result += '<' + tag(node) + [].map.call(node.attributes, attr_str).join('') + '>';\n  }\n\n  /**\n   * @param {Node} node\n   */\n  function close(node) {\n    result += '</' + tag(node) + '>';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  function render(event) {\n    (event.event === 'start' ? open : close)(event.node);\n  }\n\n  while (original.length || highlighted.length) {\n    var stream = selectStream();\n    result += escapeHTML(value.substring(processed, stream[0].offset));\n    processed = stream[0].offset;\n    if (stream === original) {\n      /*\n      On any opening or closing tag of the original markup we first close\n      the entire highlighted node stack, then render the original tag along\n      with all the following original tags at the same offset and then\n      reopen all the tags on the highlighted stack.\n      */\n      nodeStack.reverse().forEach(close);\n      do {\n        render(stream.splice(0, 1)[0]);\n        stream = selectStream();\n      } while (stream === original && stream.length && stream[0].offset === processed);\n      nodeStack.reverse().forEach(open);\n    } else {\n      if (stream[0].event === 'start') {\n        nodeStack.push(stream[0].node);\n      } else {\n        nodeStack.pop();\n      }\n      render(stream.splice(0, 1)[0]);\n    }\n  }\n  return result + escapeHTML(value.substr(processed));\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  escapeHTML: escapeHTML,\n  inherit: inherit,\n  nodeStream: nodeStream,\n  mergeStreams: mergeStreams\n});\n\n/**\n * @typedef {object} Renderer\n * @property {(text: string) => void} addText\n * @property {(node: Node) => void} openNode\n * @property {(node: Node) => void} closeNode\n * @property {() => string} value\n */\n\n/** @typedef {{kind?: string, sublanguage?: boolean}} Node */\n/** @typedef {{walk: (r: Renderer) => void}} Tree */\n/** */\n\nconst SPAN_CLOSE = '</span>';\n\n/**\n * Determines if a node needs to be wrapped in <span>\n *\n * @param {Node} node */\nconst emitsWrappingTags = (node) => {\n  return !!node.kind;\n};\n\n/** @type {Renderer} */\nclass HTMLRenderer {\n  /**\n   * Creates a new HTMLRenderer\n   *\n   * @param {Tree} parseTree - the parse tree (must support `walk` API)\n   * @param {{classPrefix: string}} options\n   */\n  constructor(parseTree, options) {\n    this.buffer = \"\";\n    this.classPrefix = options.classPrefix;\n    parseTree.walk(this);\n  }\n\n  /**\n   * Adds texts to the output stream\n   *\n   * @param {string} text */\n  addText(text) {\n    this.buffer += escapeHTML(text);\n  }\n\n  /**\n   * Adds a node open to the output stream (if needed)\n   *\n   * @param {Node} node */\n  openNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    let className = node.kind;\n    if (!node.sublanguage) {\n      className = `${this.classPrefix}${className}`;\n    }\n    this.span(className);\n  }\n\n  /**\n   * Adds a node close to the output stream (if needed)\n   *\n   * @param {Node} node */\n  closeNode(node) {\n    if (!emitsWrappingTags(node)) return;\n\n    this.buffer += SPAN_CLOSE;\n  }\n\n  /**\n   * returns the accumulated buffer\n  */\n  value() {\n    return this.buffer;\n  }\n\n  // helpers\n\n  /**\n   * Builds a span element\n   *\n   * @param {string} className */\n  span(className) {\n    this.buffer += `<span class=\"${className}\">`;\n  }\n}\n\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} | string} Node */\n/** @typedef {{kind?: string, sublanguage?: boolean, children: Node[]} } DataNode */\n/**  */\n\nclass TokenTree {\n  constructor() {\n    /** @type DataNode */\n    this.rootNode = { children: [] };\n    this.stack = [this.rootNode];\n  }\n\n  get top() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  get root() { return this.rootNode; }\n\n  /** @param {Node} node */\n  add(node) {\n    this.top.children.push(node);\n  }\n\n  /** @param {string} kind */\n  openNode(kind) {\n    /** @type Node */\n    const node = { kind, children: [] };\n    this.add(node);\n    this.stack.push(node);\n  }\n\n  closeNode() {\n    if (this.stack.length > 1) {\n      return this.stack.pop();\n    }\n    // eslint-disable-next-line no-undefined\n    return undefined;\n  }\n\n  closeAllNodes() {\n    while (this.closeNode());\n  }\n\n  toJSON() {\n    return JSON.stringify(this.rootNode, null, 4);\n  }\n\n  /**\n   * @typedef { import(\"./html_renderer\").Renderer } Renderer\n   * @param {Renderer} builder\n   */\n  walk(builder) {\n    // this does not\n    return this.constructor._walk(builder, this.rootNode);\n    // this works\n    // return TokenTree._walk(builder, this.rootNode);\n  }\n\n  /**\n   * @param {Renderer} builder\n   * @param {Node} node\n   */\n  static _walk(builder, node) {\n    if (typeof node === \"string\") {\n      builder.addText(node);\n    } else if (node.children) {\n      builder.openNode(node);\n      node.children.forEach((child) => this._walk(builder, child));\n      builder.closeNode(node);\n    }\n    return builder;\n  }\n\n  /**\n   * @param {Node} node\n   */\n  static _collapse(node) {\n    if (typeof node === \"string\") return;\n    if (!node.children) return;\n\n    if (node.children.every(el => typeof el === \"string\")) {\n      // node.text = node.children.join(\"\");\n      // delete node.children;\n      node.children = [node.children.join(\"\")];\n    } else {\n      node.children.forEach((child) => {\n        TokenTree._collapse(child);\n      });\n    }\n  }\n}\n\n/**\n  Currently this is all private API, but this is the minimal API necessary\n  that an Emitter must implement to fully support the parser.\n\n  Minimal interface:\n\n  - addKeyword(text, kind)\n  - addText(text)\n  - addSublanguage(emitter, subLanguageName)\n  - finalize()\n  - openNode(kind)\n  - closeNode()\n  - closeAllNodes()\n  - toHTML()\n\n*/\n\n/**\n * @implements {Emitter}\n */\nclass TokenTreeEmitter extends TokenTree {\n  /**\n   * @param {*} options\n   */\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} kind\n   */\n  addKeyword(text, kind) {\n    if (text === \"\") { return; }\n\n    this.openNode(kind);\n    this.addText(text);\n    this.closeNode();\n  }\n\n  /**\n   * @param {string} text\n   */\n  addText(text) {\n    if (text === \"\") { return; }\n\n    this.add(text);\n  }\n\n  /**\n   * @param {Emitter & {root: DataNode}} emitter\n   * @param {string} name\n   */\n  addSublanguage(emitter, name) {\n    /** @type DataNode */\n    const node = emitter.root;\n    node.kind = name;\n    node.sublanguage = true;\n    this.add(node);\n  }\n\n  toHTML() {\n    const renderer = new HTMLRenderer(this, this.options);\n    return renderer.value();\n  }\n\n  finalize() {\n    return true;\n  }\n}\n\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\nfunction escape(value) {\n  return new RegExp(value.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * @param {RegExp} re\n * @returns {number}\n */\nfunction countMatchGroups(re) {\n  return (new RegExp(re.toString() + '|')).exec('').length - 1;\n}\n\n/**\n * Does lexeme start with a regular expression match at the beginning\n * @param {RegExp} re\n * @param {string} lexeme\n */\nfunction startsWith(re, lexeme) {\n  var match = re && re.exec(lexeme);\n  return match && match.index === 0;\n}\n\n// join logically computes regexps.join(separator), but fixes the\n// backreferences so they continue to match.\n// it also places each individual regular expression into it's own\n// match group, keeping track of the sequencing of those match groups\n// is currently an exercise for the caller. :-)\n/**\n * @param {(string | RegExp)[]} regexps\n * @param {string} separator\n * @returns {string}\n */\nfunction join(regexps, separator = \"|\") {\n  // backreferenceRe matches an open parenthesis or backreference. To avoid\n  // an incorrect parse, it additionally matches the following:\n  // - [...] elements, where the meaning of parentheses and escapes change\n  // - other escape sequences, so we do not misparse escape sequences as\n  //   interesting elements\n  // - non-matching or lookahead parentheses, which do not capture. These\n  //   follow the '(' with a '?'.\n  var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n  var numCaptures = 0;\n  var ret = '';\n  for (var i = 0; i < regexps.length; i++) {\n    numCaptures += 1;\n    var offset = numCaptures;\n    var re = source(regexps[i]);\n    if (i > 0) {\n      ret += separator;\n    }\n    ret += \"(\";\n    while (re.length > 0) {\n      var match = backreferenceRe.exec(re);\n      if (match == null) {\n        ret += re;\n        break;\n      }\n      ret += re.substring(0, match.index);\n      re = re.substring(match.index + match[0].length);\n      if (match[0][0] === '\\\\' && match[1]) {\n        // Adjust the backreference.\n        ret += '\\\\' + String(Number(match[1]) + offset);\n      } else {\n        ret += match[0];\n        if (match[0] === '(') {\n          numCaptures++;\n        }\n      }\n    }\n    ret += \")\";\n  }\n  return ret;\n}\n\n// Common regexps\nconst IDENT_RE = '[a-zA-Z]\\\\w*';\nconst UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\nconst NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\nconst C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\nconst BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\nconst RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n/**\n* @param { Partial<Mode> & {binary?: string | RegExp} } opts\n*/\nconst SHEBANG = (opts = {}) => {\n  const beginShebang = /^#![ ]*\\//;\n  if (opts.binary) {\n    opts.begin = concat(\n      beginShebang,\n      /.*\\b/,\n      opts.binary,\n      /\\b.*/);\n  }\n  return inherit({\n    className: 'meta',\n    begin: beginShebang,\n    end: /$/,\n    relevance: 0,\n    /** @type {ModeCallback} */\n    \"on:begin\": (m, resp) => {\n      if (m.index !== 0) resp.ignoreMatch();\n    }\n  }, opts);\n};\n\n// Common modes\nconst BACKSLASH_ESCAPE = {\n  begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n};\nconst APOS_STRING_MODE = {\n  className: 'string',\n  begin: '\\'',\n  end: '\\'',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst QUOTE_STRING_MODE = {\n  className: 'string',\n  begin: '\"',\n  end: '\"',\n  illegal: '\\\\n',\n  contains: [BACKSLASH_ESCAPE]\n};\nconst PHRASAL_WORDS_MODE = {\n  begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n};\n/**\n * Creates a comment mode\n *\n * @param {string | RegExp} begin\n * @param {string | RegExp} end\n * @param {Mode | {}} [modeOptions]\n * @returns {Partial<Mode>}\n */\nconst COMMENT = function(begin, end, modeOptions = {}) {\n  var mode = inherit(\n    {\n      className: 'comment',\n      begin,\n      end,\n      contains: []\n    },\n    modeOptions\n  );\n  mode.contains.push(PHRASAL_WORDS_MODE);\n  mode.contains.push({\n    className: 'doctag',\n    begin: '(?:TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):',\n    relevance: 0\n  });\n  return mode;\n};\nconst C_LINE_COMMENT_MODE = COMMENT('//', '$');\nconst C_BLOCK_COMMENT_MODE = COMMENT('/\\\\*', '\\\\*/');\nconst HASH_COMMENT_MODE = COMMENT('#', '$');\nconst NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE,\n  relevance: 0\n};\nconst C_NUMBER_MODE = {\n  className: 'number',\n  begin: C_NUMBER_RE,\n  relevance: 0\n};\nconst BINARY_NUMBER_MODE = {\n  className: 'number',\n  begin: BINARY_NUMBER_RE,\n  relevance: 0\n};\nconst CSS_NUMBER_MODE = {\n  className: 'number',\n  begin: NUMBER_RE + '(' +\n    '%|em|ex|ch|rem' +\n    '|vw|vh|vmin|vmax' +\n    '|cm|mm|in|pt|pc|px' +\n    '|deg|grad|rad|turn' +\n    '|s|ms' +\n    '|Hz|kHz' +\n    '|dpi|dpcm|dppx' +\n    ')?',\n  relevance: 0\n};\nconst REGEXP_MODE = {\n  // this outer rule makes sure we actually have a WHOLE regex and not simply\n  // an expression such as:\n  //\n  //     3 / something\n  //\n  // (which will then blow up when regex's `illegal` sees the newline)\n  begin: /(?=\\/[^/\\n]*\\/)/,\n  contains: [{\n    className: 'regexp',\n    begin: /\\//,\n    end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        relevance: 0,\n        contains: [BACKSLASH_ESCAPE]\n      }\n    ]\n  }]\n};\nconst TITLE_MODE = {\n  className: 'title',\n  begin: IDENT_RE,\n  relevance: 0\n};\nconst UNDERSCORE_TITLE_MODE = {\n  className: 'title',\n  begin: UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\nconst METHOD_GUARD = {\n  // excludes method names from keyword processing\n  begin: '\\\\.\\\\s*' + UNDERSCORE_IDENT_RE,\n  relevance: 0\n};\n\n/**\n * Adds end same as begin mechanics to a mode\n *\n * Your mode must include at least a single () match group as that first match\n * group is what is used for comparison\n * @param {Partial<Mode>} mode\n */\nconst END_SAME_AS_BEGIN = function(mode) {\n  return Object.assign(mode,\n    {\n      /** @type {ModeCallback} */\n      'on:begin': (m, resp) => { resp.data._beginMatch = m[1]; },\n      /** @type {ModeCallback} */\n      'on:end': (m, resp) => { if (resp.data._beginMatch !== m[1]) resp.ignoreMatch(); }\n    });\n};\n\nvar MODES = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IDENT_RE: IDENT_RE,\n  UNDERSCORE_IDENT_RE: UNDERSCORE_IDENT_RE,\n  NUMBER_RE: NUMBER_RE,\n  C_NUMBER_RE: C_NUMBER_RE,\n  BINARY_NUMBER_RE: BINARY_NUMBER_RE,\n  RE_STARTERS_RE: RE_STARTERS_RE,\n  SHEBANG: SHEBANG,\n  BACKSLASH_ESCAPE: BACKSLASH_ESCAPE,\n  APOS_STRING_MODE: APOS_STRING_MODE,\n  QUOTE_STRING_MODE: QUOTE_STRING_MODE,\n  PHRASAL_WORDS_MODE: PHRASAL_WORDS_MODE,\n  COMMENT: COMMENT,\n  C_LINE_COMMENT_MODE: C_LINE_COMMENT_MODE,\n  C_BLOCK_COMMENT_MODE: C_BLOCK_COMMENT_MODE,\n  HASH_COMMENT_MODE: HASH_COMMENT_MODE,\n  NUMBER_MODE: NUMBER_MODE,\n  C_NUMBER_MODE: C_NUMBER_MODE,\n  BINARY_NUMBER_MODE: BINARY_NUMBER_MODE,\n  CSS_NUMBER_MODE: CSS_NUMBER_MODE,\n  REGEXP_MODE: REGEXP_MODE,\n  TITLE_MODE: TITLE_MODE,\n  UNDERSCORE_TITLE_MODE: UNDERSCORE_TITLE_MODE,\n  METHOD_GUARD: METHOD_GUARD,\n  END_SAME_AS_BEGIN: END_SAME_AS_BEGIN\n});\n\n// keywords that should have no default relevance value\nvar COMMON_KEYWORDS = 'of and for in not or if then'.split(' ');\n\n// compilation\n\n/**\n * Compiles a language definition result\n *\n * Given the raw result of a language definition (Language), compiles this so\n * that it is ready for highlighting code.\n * @param {Language} language\n * @returns {CompiledLanguage}\n */\nfunction compileLanguage(language) {\n  /**\n   * Builds a regex with the case sensativility of the current language\n   *\n   * @param {RegExp | string} value\n   * @param {boolean} [global]\n   */\n  function langRe(value, global) {\n    return new RegExp(\n      source(value),\n      'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n    );\n  }\n\n  /**\n    Stores multiple regular expressions and allows you to quickly search for\n    them all in a string simultaneously - returning the first match.  It does\n    this by creating a huge (a|b|c) regex - each individual item wrapped with ()\n    and joined by `|` - using match groups to track position.  When a match is\n    found checking which position in the array has content allows us to figure\n    out which of the original regexes / match groups triggered the match.\n\n    The match object itself (the result of `Regex.exec`) is returned but also\n    enhanced by merging in any meta-data that was registered with the regex.\n    This is how we keep track of which mode matched, and what type of rule\n    (`illegal`, `begin`, end, etc).\n  */\n  class MultiRegex {\n    constructor() {\n      this.matchIndexes = {};\n      // @ts-ignore\n      this.regexes = [];\n      this.matchAt = 1;\n      this.position = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      opts.position = this.position++;\n      // @ts-ignore\n      this.matchIndexes[this.matchAt] = opts;\n      this.regexes.push([opts, re]);\n      this.matchAt += countMatchGroups(re) + 1;\n    }\n\n    compile() {\n      if (this.regexes.length === 0) {\n        // avoids the need to check length every time exec is called\n        // @ts-ignore\n        this.exec = () => null;\n      }\n      const terminators = this.regexes.map(el => el[1]);\n      this.matcherRe = langRe(join(terminators), true);\n      this.lastIndex = 0;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      this.matcherRe.lastIndex = this.lastIndex;\n      const match = this.matcherRe.exec(s);\n      if (!match) { return null; }\n\n      // eslint-disable-next-line no-undefined\n      const i = match.findIndex((el, i) => i > 0 && el !== undefined);\n      // @ts-ignore\n      const matchData = this.matchIndexes[i];\n      // trim off any earlier non-relevant match groups (ie, the other regex\n      // match groups that make up the multi-matcher)\n      match.splice(0, i);\n\n      return Object.assign(match, matchData);\n    }\n  }\n\n  /*\n    Created to solve the key deficiently with MultiRegex - there is no way to\n    test for multiple matches at a single location.  Why would we need to do\n    that?  In the future a more dynamic engine will allow certain matches to be\n    ignored.  An example: if we matched say the 3rd regex in a large group but\n    decided to ignore it - we'd need to started testing again at the 4th\n    regex... but MultiRegex itself gives us no real way to do that.\n\n    So what this class creates MultiRegexs on the fly for whatever search\n    position they are needed.\n\n    NOTE: These additional MultiRegex objects are created dynamically.  For most\n    grammars most of the time we will never actually need anything more than the\n    first MultiRegex - so this shouldn't have too much overhead.\n\n    Say this is our search group, and we match regex3, but wish to ignore it.\n\n      regex1 | regex2 | regex3 | regex4 | regex5    ' ie, startAt = 0\n\n    What we need is a new MultiRegex that only includes the remaining\n    possibilities:\n\n      regex4 | regex5                               ' ie, startAt = 3\n\n    This class wraps all that complexity up in a simple API... `startAt` decides\n    where in the array of expressions to start doing the matching. It\n    auto-increments, so if a match is found at position 2, then startAt will be\n    set to 3.  If the end is reached startAt will return to 0.\n\n    MOST of the time the parser will be setting startAt manually to 0.\n  */\n  class ResumableMultiRegex {\n    constructor() {\n      // @ts-ignore\n      this.rules = [];\n      // @ts-ignore\n      this.multiRegexes = [];\n      this.count = 0;\n\n      this.lastIndex = 0;\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    getMatcher(index) {\n      if (this.multiRegexes[index]) return this.multiRegexes[index];\n\n      const matcher = new MultiRegex();\n      this.rules.slice(index).forEach(([re, opts]) => matcher.addRule(re, opts));\n      matcher.compile();\n      this.multiRegexes[index] = matcher;\n      return matcher;\n    }\n\n    considerAll() {\n      this.regexIndex = 0;\n    }\n\n    // @ts-ignore\n    addRule(re, opts) {\n      this.rules.push([re, opts]);\n      if (opts.type === \"begin\") this.count++;\n    }\n\n    /** @param {string} s */\n    exec(s) {\n      const m = this.getMatcher(this.regexIndex);\n      m.lastIndex = this.lastIndex;\n      const result = m.exec(s);\n      if (result) {\n        this.regexIndex += result.position + 1;\n        if (this.regexIndex === this.count) { // wrap-around\n          this.regexIndex = 0;\n        }\n      }\n\n      // this.regexIndex = 0;\n      return result;\n    }\n  }\n\n  /**\n   * Given a mode, builds a huge ResumableMultiRegex that can be used to walk\n   * the content and find matches.\n   *\n   * @param {CompiledMode} mode\n   * @returns {ResumableMultiRegex}\n   */\n  function buildModeRegex(mode) {\n    const mm = new ResumableMultiRegex();\n\n    mode.contains.forEach(term => mm.addRule(term.begin, { rule: term, type: \"begin\" }));\n\n    if (mode.terminator_end) {\n      mm.addRule(mode.terminator_end, { type: \"end\" });\n    }\n    if (mode.illegal) {\n      mm.addRule(mode.illegal, { type: \"illegal\" });\n    }\n\n    return mm;\n  }\n\n  // TODO: We need negative look-behind support to do this properly\n  /**\n   * Skip a match if it has a preceding or trailing dot\n   *\n   * This is used for `beginKeywords` to prevent matching expressions such as\n   * `bob.keyword.do()`. The mode compiler automatically wires this up as a\n   * special _internal_ 'on:begin' callback for modes with `beginKeywords`\n   * @param {RegExpMatchArray} match\n   * @param {CallbackResponse} response\n   */\n  function skipIfhasPrecedingOrTrailingDot(match, response) {\n    const before = match.input[match.index - 1];\n    const after = match.input[match.index + match[0].length];\n    if (before === \".\" || after === \".\") {\n      response.ignoreMatch();\n    }\n  }\n\n  /** skip vs abort vs ignore\n   *\n   * @skip   - The mode is still entered and exited normally (and contains rules apply),\n   *           but all content is held and added to the parent buffer rather than being\n   *           output when the mode ends.  Mostly used with `sublanguage` to build up\n   *           a single large buffer than can be parsed by sublanguage.\n   *\n   *             - The mode begin ands ends normally.\n   *             - Content matched is added to the parent mode buffer.\n   *             - The parser cursor is moved forward normally.\n   *\n   * @abort  - A hack placeholder until we have ignore.  Aborts the mode (as if it\n   *           never matched) but DOES NOT continue to match subsequent `contains`\n   *           modes.  Abort is bad/suboptimal because it can result in modes\n   *           farther down not getting applied because an earlier rule eats the\n   *           content but then aborts.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is added to the mode buffer.\n   *             - The parser cursor is moved forward accordingly.\n   *\n   * @ignore - Ignores the mode (as if it never matched) and continues to match any\n   *           subsequent `contains` modes.  Ignore isn't technically possible with\n   *           the current parser implementation.\n   *\n   *             - The mode does not begin.\n   *             - Content matched by `begin` is ignored.\n   *             - The parser cursor is not moved forward.\n   */\n\n  /**\n   * Compiles an individual mode\n   *\n   * This can raise an error if the mode contains certain detectable known logic\n   * issues.\n   * @param {Mode} mode\n   * @param {CompiledMode | null} [parent]\n   * @returns {CompiledMode | never}\n   */\n  function compileMode(mode, parent) {\n    const cmode = /** @type CompiledMode */ (mode);\n    if (mode.compiled) return cmode;\n    mode.compiled = true;\n\n    // __beforeBegin is considered private API, internal use only\n    mode.__beforeBegin = null;\n\n    mode.keywords = mode.keywords || mode.beginKeywords;\n\n    let kw_pattern = null;\n    if (typeof mode.keywords === \"object\") {\n      kw_pattern = mode.keywords.$pattern;\n      delete mode.keywords.$pattern;\n    }\n\n    if (mode.keywords) {\n      mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n    }\n\n    // both are not allowed\n    if (mode.lexemes && kw_pattern) {\n      throw new Error(\"ERR: Prefer `keywords.$pattern` to `mode.lexemes`, BOTH are not allowed. (see mode reference) \");\n    }\n\n    // `mode.lexemes` was the old standard before we added and now recommend\n    // using `keywords.$pattern` to pass the keyword pattern\n    cmode.keywordPatternRe = langRe(mode.lexemes || kw_pattern || /\\w+/, true);\n\n    if (parent) {\n      if (mode.beginKeywords) {\n        // for languages with keywords that include non-word characters checking for\n        // a word boundary is not sufficient, so instead we check for a word boundary\n        // or whitespace - this does no harm in any case since our keyword engine\n        // doesn't allow spaces in keywords anyways and we still check for the boundary\n        // first\n        mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')(?=\\\\b|\\\\s)';\n        mode.__beforeBegin = skipIfhasPrecedingOrTrailingDot;\n      }\n      if (!mode.begin) mode.begin = /\\B|\\b/;\n      cmode.beginRe = langRe(mode.begin);\n      if (mode.endSameAsBegin) mode.end = mode.begin;\n      if (!mode.end && !mode.endsWithParent) mode.end = /\\B|\\b/;\n      if (mode.end) cmode.endRe = langRe(mode.end);\n      cmode.terminator_end = source(mode.end) || '';\n      if (mode.endsWithParent && parent.terminator_end) {\n        cmode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n    }\n    if (mode.illegal) cmode.illegalRe = langRe(mode.illegal);\n    // eslint-disable-next-line no-undefined\n    if (mode.relevance === undefined) mode.relevance = 1;\n    if (!mode.contains) mode.contains = [];\n\n    mode.contains = [].concat(...mode.contains.map(function(c) {\n      return expand_or_clone_mode(c === 'self' ? mode : c);\n    }));\n    mode.contains.forEach(function(c) { compileMode(/** @type Mode */ (c), cmode); });\n\n    if (mode.starts) {\n      compileMode(mode.starts, parent);\n    }\n\n    cmode.matcher = buildModeRegex(cmode);\n    return cmode;\n  }\n\n  // self is not valid at the top-level\n  if (language.contains && language.contains.includes('self')) {\n    throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\");\n  }\n  return compileMode(/** @type Mode */ (language));\n}\n\n/**\n * Determines if a mode has a dependency on it's parent or not\n *\n * If a mode does have a parent dependency then often we need to clone it if\n * it's used in multiple places so that each copy points to the correct parent,\n * where-as modes without a parent can often safely be re-used at the bottom of\n * a mode chain.\n *\n * @param {Mode | null} mode\n * @returns {boolean} - is there a dependency on the parent?\n * */\nfunction dependencyOnParent(mode) {\n  if (!mode) return false;\n\n  return mode.endsWithParent || dependencyOnParent(mode.starts);\n}\n\n/**\n * Expands a mode or clones it if necessary\n *\n * This is necessary for modes with parental dependenceis (see notes on\n * `dependencyOnParent`) and for nodes that have `variants` - which must then be\n * exploded into their own individual modes at compile time.\n *\n * @param {Mode} mode\n * @returns {Mode | Mode[]}\n * */\nfunction expand_or_clone_mode(mode) {\n  if (mode.variants && !mode.cached_variants) {\n    mode.cached_variants = mode.variants.map(function(variant) {\n      return inherit(mode, { variants: null }, variant);\n    });\n  }\n\n  // EXPAND\n  // if we have variants then essentially \"replace\" the mode with the variants\n  // this happens in compileMode, where this function is called from\n  if (mode.cached_variants) {\n    return mode.cached_variants;\n  }\n\n  // CLONE\n  // if we have dependencies on parents then we need a unique\n  // instance of ourselves, so we can be reused with many\n  // different parents without issue\n  if (dependencyOnParent(mode)) {\n    return inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null });\n  }\n\n  if (Object.isFrozen(mode)) {\n    return inherit(mode);\n  }\n\n  // no special dependency issues, just return ourselves\n  return mode;\n}\n\n/***********************************************\n  Keywords\n***********************************************/\n\n/**\n * Given raw keywords from a language definition, compile them.\n *\n * @param {string | Record<string,string>} rawKeywords\n * @param {boolean} case_insensitive\n */\nfunction compileKeywords(rawKeywords, case_insensitive) {\n  /** @type KeywordDict */\n  var compiled_keywords = {};\n\n  if (typeof rawKeywords === 'string') { // string\n    splitAndCompile('keyword', rawKeywords);\n  } else {\n    Object.keys(rawKeywords).forEach(function(className) {\n      splitAndCompile(className, rawKeywords[className]);\n    });\n  }\n  return compiled_keywords;\n\n  // ---\n\n  /**\n   * Compiles an individual list of keywords\n   *\n   * Ex: \"for if when while|5\"\n   *\n   * @param {string} className\n   * @param {string} keywordList\n   */\n  function splitAndCompile(className, keywordList) {\n    if (case_insensitive) {\n      keywordList = keywordList.toLowerCase();\n    }\n    keywordList.split(' ').forEach(function(keyword) {\n      var pair = keyword.split('|');\n      compiled_keywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n    });\n  }\n}\n\n/**\n * Returns the proper score for a given keyword\n *\n * Also takes into account comment keywords, which will be scored 0 UNLESS\n * another score has been manually assigned.\n * @param {string} keyword\n * @param {string} [providedScore]\n */\nfunction scoreForKeyword(keyword, providedScore) {\n  // manual scores always win over common keywords\n  // so you can force a score of 1 if you really insist\n  if (providedScore) {\n    return Number(providedScore);\n  }\n\n  return commonKeyword(keyword) ? 0 : 1;\n}\n\n/**\n * Determines if a given keyword is common or not\n *\n * @param {string} keyword */\nfunction commonKeyword(keyword) {\n  return COMMON_KEYWORDS.includes(keyword.toLowerCase());\n}\n\nvar version = \"10.1.2\";\n\n/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\nconst escape$1 = escapeHTML;\nconst inherit$1 = inherit;\n\nconst { nodeStream: nodeStream$1, mergeStreams: mergeStreams$1 } = utils;\nconst NO_MATCH = Symbol(\"nomatch\");\n\n/**\n * @param {any} hljs - object that is extended (legacy)\n * @returns {HLJSApi}\n */\nconst HLJS = function(hljs) {\n  // Convenience variables for build-in objects\n  /** @type {unknown[]} */\n  var ArrayProto = [];\n\n  // Global internal variables used within the highlight.js library.\n  /** @type {Record<string, Language>} */\n  var languages = Object.create(null);\n  /** @type {Record<string, string>} */\n  var aliases = Object.create(null);\n  /** @type {HLJSPlugin[]} */\n  var plugins = [];\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  var SAFE_MODE = true;\n  var fixMarkupRe = /(^(<[^>]+>|\\t|)+|\\n)/gm;\n  var LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n  /** @type {Language} */\n  const PLAINTEXT_LANGUAGE = { disableAutodetect: true, name: 'Plain text', contains: [] };\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  /** @type HLJSOptions */\n  var options = {\n    noHighlightRe: /^(no-?highlight)$/i,\n    languageDetectRe: /\\blang(?:uage)?-([\\w-]+)\\b/i,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: null,\n    // beta configuration options, subject to change, welcome to discuss\n    // https://github.com/highlightjs/highlight.js/issues/1086\n    __emitter: TokenTreeEmitter\n  };\n\n  /* Utility functions */\n\n  /**\n   * Tests a language name to see if highlighting should be skipped\n   * @param {string} languageName\n   */\n  function shouldNotHighlight(languageName) {\n    return options.noHighlightRe.test(languageName);\n  }\n\n  /**\n   * @param {HighlightedHTMLElement} block - the HTML element to determine language for\n   */\n  function blockLanguage(block) {\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    const match = options.languageDetectRe.exec(classes);\n    if (match) {\n      var language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    return classes\n      .split(/\\s+/)\n      .find((_class) => shouldNotHighlight(_class) || getLanguage(_class));\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n   *\n   * @returns {HighlightResult} Result - an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {string} code - the original raw code\n   * @property {Mode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignoreIllegals, continuation) {\n    /** @type {{ code: string, language: string, result?: any }} */\n    var context = {\n      code,\n      language: languageName\n    };\n    // the plugin can change the desired language or the code to be highlighted\n    // just be changing the object it was passed\n    fire(\"before:highlight\", context);\n\n    // a before plugin can usurp the result completely by providing it's own\n    // in which case we don't even need to call highlight\n    var result = context.result ?\n      context.result :\n      _highlight(context.language, context.code, ignoreIllegals, continuation);\n\n    result.code = context.code;\n    // the plugin can change anything in result to suite it\n    fire(\"after:highlight\", result);\n\n    return result;\n  }\n\n  /**\n   * private highlight that's used internally and does not fire callbacks\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} [ignoreIllegals] - whether to ignore illegal matches, default is to bail\n   * @param {Mode} [continuation] - current continuation mode, if any\n  */\n  function _highlight(languageName, code, ignoreIllegals, continuation) {\n    var codeToHighlight = code;\n\n    /**\n     * Return keyword data if a match is a keyword\n     * @param {CompiledMode} mode - current mode\n     * @param {RegExpMatchArray} match - regexp match data\n     * @returns {KeywordData | false}\n     */\n    function keywordData(mode, match) {\n      var matchText = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return Object.prototype.hasOwnProperty.call(mode.keywords, matchText) && mode.keywords[matchText];\n    }\n\n    function processKeywords() {\n      if (!top.keywords) {\n        emitter.addText(mode_buffer);\n        return;\n      }\n\n      let last_index = 0;\n      top.keywordPatternRe.lastIndex = 0;\n      let match = top.keywordPatternRe.exec(mode_buffer);\n      let buf = \"\";\n\n      while (match) {\n        buf += mode_buffer.substring(last_index, match.index);\n        const data = keywordData(top, match);\n        if (data) {\n          const [kind, keywordRelevance] = data;\n          emitter.addText(buf);\n          buf = \"\";\n\n          relevance += keywordRelevance;\n          emitter.addKeyword(match[0], kind);\n        } else {\n          buf += match[0];\n        }\n        last_index = top.keywordPatternRe.lastIndex;\n        match = top.keywordPatternRe.exec(mode_buffer);\n      }\n      buf += mode_buffer.substr(last_index);\n      emitter.addText(buf);\n    }\n\n    function processSubLanguage() {\n      if (mode_buffer === \"\") return;\n      /** @type HighlightResult */\n      var result = null;\n\n      if (typeof top.subLanguage === 'string') {\n        if (!languages[top.subLanguage]) {\n          emitter.addText(mode_buffer);\n          return;\n        }\n        result = _highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]);\n        continuations[top.subLanguage] = result.top;\n      } else {\n        result = highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : null);\n      }\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      emitter.addSublanguage(result.emitter, result.language);\n    }\n\n    function processBuffer() {\n      if (top.subLanguage != null) {\n        processSubLanguage();\n      } else {\n        processKeywords();\n      }\n      mode_buffer = '';\n    }\n\n    /**\n     * @param {Mode} mode - new mode to start\n     */\n    function startNewMode(mode) {\n      if (mode.className) {\n        emitter.openNode(mode.className);\n      }\n      top = Object.create(mode, { parent: { value: top } });\n      return top;\n    }\n\n    /**\n     * @param {CompiledMode } mode - the mode to potentially end\n     * @param {RegExpMatchArray} match - the latest match\n     * @param {string} matchPlusRemainder - match plus remainder of content\n     * @returns {CompiledMode | void} - the next mode, or if void continue on in current mode\n     */\n    function endOfMode(mode, match, matchPlusRemainder) {\n      let matched = startsWith(mode.endRe, matchPlusRemainder);\n\n      if (matched) {\n        if (mode[\"on:end\"]) {\n          const resp = new Response(mode);\n          mode[\"on:end\"](match, resp);\n          if (resp.ignore) matched = false;\n        }\n\n        if (matched) {\n          while (mode.endsParent && mode.parent) {\n            mode = mode.parent;\n          }\n          return mode;\n        }\n      }\n      // even if on:end fires an `ignore` it's still possible\n      // that we might trigger the end node because of a parent mode\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, match, matchPlusRemainder);\n      }\n    }\n\n    /**\n     * Handle matching but then ignoring a sequence of text\n     *\n     * @param {string} lexeme - string containing full match text\n     */\n    function doIgnore(lexeme) {\n      if (top.matcher.regexIndex === 0) {\n        // no more regexs to potentially match here, so we move the cursor forward one\n        // space\n        mode_buffer += lexeme[0];\n        return 1;\n      } else {\n        // no need to move the cursor, we still have additional regexes to try and\n        // match at this very spot\n        continueScanAtSamePosition = true;\n        return 0;\n      }\n    }\n\n    /**\n     * Handle the start of a new potential mode match\n     *\n     * @param {EnhancedMatch} match - the current match\n     * @returns {number} how far to advance the parse cursor\n     */\n    function doBeginMatch(match) {\n      var lexeme = match[0];\n      var new_mode = match.rule;\n\n      const resp = new Response(new_mode);\n      // first internal before callbacks, then the public ones\n      const beforeCallbacks = [new_mode.__beforeBegin, new_mode[\"on:begin\"]];\n      for (const cb of beforeCallbacks) {\n        if (!cb) continue;\n        cb(match, resp);\n        if (resp.ignore) return doIgnore(lexeme);\n      }\n\n      if (new_mode && new_mode.endSameAsBegin) {\n        new_mode.endRe = escape(lexeme);\n      }\n\n      if (new_mode.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (new_mode.excludeBegin) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n          mode_buffer = lexeme;\n        }\n      }\n      startNewMode(new_mode);\n      // if (mode[\"after:begin\"]) {\n      //   let resp = new Response(mode);\n      //   mode[\"after:begin\"](match, resp);\n      // }\n      return new_mode.returnBegin ? 0 : lexeme.length;\n    }\n\n    /**\n     * Handle the potential end of mode\n     *\n     * @param {RegExpMatchArray} match - the current match\n     */\n    function doEndMatch(match) {\n      var lexeme = match[0];\n      var matchPlusRemainder = codeToHighlight.substr(match.index);\n\n      var end_mode = endOfMode(top, match, matchPlusRemainder);\n      if (!end_mode) { return NO_MATCH; }\n\n      var origin = top;\n      if (origin.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          mode_buffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          emitter.closeNode();\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== end_mode.parent);\n      if (end_mode.starts) {\n        if (end_mode.endSameAsBegin) {\n          end_mode.starts.endRe = end_mode.endRe;\n        }\n        startNewMode(end_mode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    function processContinuations() {\n      var list = [];\n      for (var current = top; current !== language; current = current.parent) {\n        if (current.className) {\n          list.unshift(current.className);\n        }\n      }\n      list.forEach(item => emitter.openNode(item));\n    }\n\n    /** @type {{type?: MatchType, index?: number, rule?: Mode}}} */\n    var lastMatch = {};\n\n    /**\n     *  Process an individual match\n     *\n     * @param {string} textBeforeMatch - text preceeding the match (since the last match)\n     * @param {EnhancedMatch} [match] - the match itself\n     */\n    function processLexeme(textBeforeMatch, match) {\n      var lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      mode_buffer += textBeforeMatch;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type === \"begin\" && match.type === \"end\" && lastMatch.index === match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        mode_buffer += codeToHighlight.slice(match.index, match.index + 1);\n        if (!SAFE_MODE) {\n          /** @type {AnnotatedError} */\n          const err = new Error('0 width match regex');\n          err.languageName = languageName;\n          err.badRule = lastMatch.rule;\n          throw err;\n        }\n        return 1;\n      }\n      lastMatch = match;\n\n      if (match.type === \"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type === \"illegal\" && !ignoreIllegals) {\n        // illegal match, we do not continue processing\n        /** @type {AnnotatedError} */\n        const err = new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n        err.mode = top;\n        throw err;\n      } else if (match.type === \"end\") {\n        var processed = doEndMatch(match);\n        if (processed !== NO_MATCH) {\n          return processed;\n        }\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      if (match.type === \"illegal\" && lexeme === \"\") {\n        // advance so we aren't stuck in an infinite loop\n        return 1;\n      }\n\n      // infinite loops are BAD, this is a last ditch catch all. if we have a\n      // decent number of iterations yet our index (cursor position in our\n      // parsing) still 3x behind our index then something is very wrong\n      // so we bail\n      if (iterations > 100000 && iterations > match.index * 3) {\n        const err = new Error('potential infinite loop, way more iterations than matches');\n        throw err;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length;\n    }\n\n    var language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    var md = compileLanguage(language);\n    var result = '';\n    /** @type {CompiledMode} */\n    var top = continuation || md;\n    /** @type Record<string,Mode> */\n    var continuations = {}; // keep continuations for sub-languages\n    var emitter = new options.__emitter(options);\n    processContinuations();\n    var mode_buffer = '';\n    var relevance = 0;\n    var index = 0;\n    var iterations = 0;\n    var continueScanAtSamePosition = false;\n\n    try {\n      top.matcher.considerAll();\n\n      for (;;) {\n        iterations++;\n        if (continueScanAtSamePosition) {\n          // only regexes not matched previously will now be\n          // considered for a potential match\n          continueScanAtSamePosition = false;\n        } else {\n          top.matcher.lastIndex = index;\n          top.matcher.considerAll();\n        }\n        const match = top.matcher.exec(codeToHighlight);\n        // console.log(\"match\", match[0], match.rule && match.rule.begin)\n        if (!match) break;\n\n        const beforeMatch = codeToHighlight.substring(index, match.index);\n        const processedCount = processLexeme(beforeMatch, match);\n        index = match.index + processedCount;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      emitter.closeAllNodes();\n      emitter.finalize();\n      result = emitter.toHTML();\n\n      return {\n        relevance: relevance,\n        value: result,\n        language: languageName,\n        illegal: false,\n        emitter: emitter,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.includes('Illegal')) {\n        return {\n          illegal: true,\n          illegalBy: {\n            msg: err.message,\n            context: codeToHighlight.slice(index - 100, index + 100),\n            mode: err.mode\n          },\n          sofar: result,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter\n        };\n      } else if (SAFE_MODE) {\n        return {\n          illegal: false,\n          relevance: 0,\n          value: escape$1(codeToHighlight),\n          emitter: emitter,\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * returns a valid highlight result, without actually doing any actual work,\n   * auto highlight starts with this and it's possible for small snippets that\n   * auto-detection may not find a better match\n   * @param {string} code\n   * @returns {HighlightResult}\n   */\n  function justTextHighlightResult(code) {\n    const result = {\n      relevance: 0,\n      emitter: new options.__emitter(options),\n      value: escape$1(code),\n      illegal: false,\n      top: PLAINTEXT_LANGUAGE\n    };\n    result.emitter.addText(code);\n    return result;\n  }\n\n  /**\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n    @param {string} code\n    @param {Array<string>} [languageSubset]\n    @returns {AutoHighlightResult}\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || Object.keys(languages);\n    var result = justTextHighlightResult(code);\n    var secondBest = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = _highlight(name, code, false);\n      current.language = name;\n      if (current.relevance > secondBest.relevance) {\n        secondBest = current;\n      }\n      if (current.relevance > result.relevance) {\n        secondBest = result;\n        result = current;\n      }\n    });\n    if (secondBest.language) {\n      // second_best (with underscore) is the expected API\n      result.second_best = secondBest;\n    }\n    return result;\n  }\n\n  /**\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n    @param {string} html\n    @returns {string}\n  */\n  function fixMarkup(html) {\n    if (!(options.tabReplace || options.useBR)) {\n      return html;\n    }\n\n    return html.replace(fixMarkupRe, match => {\n      if (match === '\\n') {\n        return options.useBR ? '<br>' : match;\n      } else if (options.tabReplace) {\n        return match.replace(/\\t/g, options.tabReplace);\n      }\n      return match;\n    });\n  }\n\n  /**\n   * Builds new class name for block given the language name\n   *\n   * @param {string} prevClassName\n   * @param {string} [currentLang]\n   * @param {string} [resultLang]\n   */\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang;\n    var result = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (!prevClassName.includes(language)) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /**\n   * Applies highlighting to a DOM node containing code. Accepts a DOM node and\n   * two optional parameters for fixMarkup.\n   *\n   * @param {HighlightedHTMLElement} element - the HTML element to highlight\n  */\n  function highlightBlock(element) {\n    /** @type HTMLElement */\n    let node = null;\n    const language = blockLanguage(element);\n\n    if (shouldNotHighlight(language)) return;\n\n    fire(\"before:highlightBlock\",\n      { block: element, language: language });\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = element.innerHTML.replace(/\\n/g, '').replace(/<br[ /]*>/g, '\\n');\n    } else {\n      node = element;\n    }\n    const text = node.textContent;\n    const result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    const originalStream = nodeStream$1(node);\n    if (originalStream.length) {\n      const resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams$1(originalStream, nodeStream$1(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    fire(\"after:highlightBlock\", { block: element, result: result });\n\n    element.innerHTML = result.value;\n    element.className = buildClassName(element.className, language, result.language);\n    element.result = {\n      language: result.language,\n      // TODO: remove with version 11.0\n      re: result.relevance,\n      relavance: result.relevance\n    };\n    if (result.second_best) {\n      element.second_best = {\n        language: result.second_best.language,\n        // TODO: remove with version 11.0\n        re: result.second_best.relevance,\n        relavance: result.second_best.relevance\n      };\n    }\n  }\n\n  /**\n   * Updates highlight.js global options with the passed options\n   *\n   * @param {{}} userOptions\n   */\n  function configure(userOptions) {\n    options = inherit$1(options, userOptions);\n  }\n\n  /**\n   * Highlights to all <pre><code> blocks on a page\n   *\n   * @type {Function & {called?: boolean}}\n   */\n  const initHighlighting = () => {\n    if (initHighlighting.called) return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  };\n\n  // Higlights all when DOMContentLoaded fires\n  function initHighlightingOnLoad() {\n    // @ts-ignore\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n  }\n\n  /**\n   * Register a language grammar module\n   *\n   * @param {string} languageName\n   * @param {LanguageFn} languageDefinition\n   */\n  function registerLanguage(languageName, languageDefinition) {\n    var lang = null;\n    try {\n      lang = languageDefinition(hljs);\n    } catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", languageName));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    // give it a temporary name if it doesn't have one in the meta-data\n    if (!lang.name) lang.name = languageName;\n    languages[languageName] = lang;\n    lang.rawDefinition = languageDefinition.bind(null, hljs);\n\n    if (lang.aliases) {\n      registerAliases(lang.aliases, { languageName });\n    }\n  }\n\n  /**\n   * @returns {string[]} List of language internal names\n   */\n  function listLanguages() {\n    return Object.keys(languages);\n  }\n\n  /**\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n\n    @param {string} name - name of the language to fetch/require\n    @returns {Language | never}\n  */\n  function requireLanguage(name) {\n    var lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    var err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}', name));\n    throw err;\n  }\n\n  /**\n   * @param {string} name - name of the language to retrieve\n   * @returns {Language | undefined}\n   */\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  /**\n   *\n   * @param {string|string[]} aliasList - single alias or list of aliases\n   * @param {{languageName: string}} opts\n   */\n  function registerAliases(aliasList, { languageName }) {\n    if (typeof aliasList === 'string') {\n      aliasList = [aliasList];\n    }\n    aliasList.forEach(alias => { aliases[alias] = languageName; });\n  }\n\n  /**\n   * Determines if a given language has auto-detection enabled\n   * @param {string} name - name of the language\n   */\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /**\n   * @param {HLJSPlugin} plugin\n   */\n  function addPlugin(plugin) {\n    plugins.push(plugin);\n  }\n\n  /**\n   *\n   * @param {PluginEvent} event\n   * @param {any} args\n   */\n  function fire(event, args) {\n    var cb = event;\n    plugins.forEach(function(plugin) {\n      if (plugin[cb]) {\n        plugin[cb](args);\n      }\n    });\n  }\n\n  /* Interface definition */\n\n  Object.assign(hljs, {\n    highlight,\n    highlightAuto,\n    fixMarkup,\n    highlightBlock,\n    configure,\n    initHighlighting,\n    initHighlightingOnLoad,\n    registerLanguage,\n    listLanguages,\n    getLanguage,\n    registerAliases,\n    requireLanguage,\n    autoDetection,\n    inherit: inherit$1,\n    addPlugin\n  });\n\n  hljs.debugMode = function() { SAFE_MODE = false; };\n  hljs.safeMode = function() { SAFE_MODE = true; };\n  hljs.versionString = version;\n\n  for (const key in MODES) {\n    // @ts-ignore\n    if (typeof MODES[key] === \"object\") {\n      // @ts-ignore\n      deepFreeze(MODES[key]);\n    }\n  }\n\n  // merge all the modes/regexs into our main object\n  Object.assign(hljs, MODES);\n\n  return hljs;\n};\n\n// export an \"instance\" of the highlighter\nvar highlight = HLJS({});\n\nmodule.exports = highlight;\n"},"lineCount":2082}},"error":null,"hash":"b074b9e4562ec4921f0423865a4ca5b1","cacheData":{"env":{}}}