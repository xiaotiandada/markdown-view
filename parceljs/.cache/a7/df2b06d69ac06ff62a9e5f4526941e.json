{"id":"node_modules/markdown-it-emoji/lib/replace.js","dependencies":[{"name":"/Users/xiatian/Code/markdown-view/parceljs/package.json","includedInParent":true,"mtime":1597736707676},{"name":"/Users/xiatian/Code/markdown-view/parceljs/node_modules/markdown-it-emoji/package.json","includedInParent":true,"mtime":1597734698006}],"generated":{"js":"// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/markdown-it-emoji/lib/replace.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}}],"sources":{"node_modules/markdown-it-emoji/lib/replace.js":"// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n"},"lineCount":90}},"error":null,"hash":"b3b0eac91ef3503a3b7e16346e27e9b6","cacheData":{"env":{}}}