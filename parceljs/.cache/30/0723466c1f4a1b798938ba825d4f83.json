{"id":"node_modules/markdown-it-deflist/index.js","dependencies":[{"name":"/Users/xiatian/Code/markdown-view/parceljs/package.json","includedInParent":true,"mtime":1597736707676},{"name":"/Users/xiatian/Code/markdown-view/parceljs/node_modules/markdown-it-deflist/package.json","includedInParent":true,"mtime":1597734698006}],"generated":{"js":"// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/markdown-it-deflist/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}}],"sources":{"node_modules/markdown-it-deflist/index.js":"// Process definition lists\n//\n'use strict';\n\n\nmodule.exports = function deflist_plugin(md) {\n  var isSpace = md.utils.isSpace;\n\n  // Search `[:~][\\n ]`, returns next pos after marker on success\n  // or -1 on fail.\n  function skipMarker(state, line) {\n    var pos, marker,\n        start = state.bMarks[line] + state.tShift[line],\n        max = state.eMarks[line];\n\n    if (start >= max) { return -1; }\n\n    // Check bullet\n    marker = state.src.charCodeAt(start++);\n    if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n    pos = state.skipSpaces(start);\n\n    // require space after \":\"\n    if (start === pos) { return -1; }\n\n    // no empty definitions, e.g. \"  : \"\n    if (pos >= max) { return -1; }\n\n    return start;\n  }\n\n  function markTightParagraphs(state, idx) {\n    var i, l,\n        level = state.level + 2;\n\n    for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n      if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n        state.tokens[i + 2].hidden = true;\n        state.tokens[i].hidden = true;\n        i += 2;\n      }\n    }\n  }\n\n  function deflist(state, startLine, endLine, silent) {\n    var ch,\n        contentStart,\n        ddLine,\n        dtLine,\n        itemLines,\n        listLines,\n        listTokIdx,\n        max,\n        nextLine,\n        offset,\n        oldDDIndent,\n        oldIndent,\n        oldParentType,\n        oldSCount,\n        oldTShift,\n        oldTight,\n        pos,\n        prevEmptyEnd,\n        tight,\n        token;\n\n    if (silent) {\n      // quirk: validation mode validates a dd block only, not a whole deflist\n      if (state.ddIndent < 0) { return false; }\n      return skipMarker(state, startLine) >= 0;\n    }\n\n    nextLine = startLine + 1;\n    if (nextLine >= endLine) { return false; }\n\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      if (nextLine >= endLine) { return false; }\n    }\n\n    if (state.sCount[nextLine] < state.blkIndent) { return false; }\n    contentStart = skipMarker(state, nextLine);\n    if (contentStart < 0) { return false; }\n\n    // Start list\n    listTokIdx = state.tokens.length;\n    tight = true;\n\n    token     = state.push('dl_open', 'dl', 1);\n    token.map = listLines = [ startLine, 0 ];\n\n    //\n    // Iterate list items\n    //\n\n    dtLine = startLine;\n    ddLine = nextLine;\n\n    // One definition list can contain multiple DTs,\n    // and one DT can be followed by multiple DDs.\n    //\n    // Thus, there is two loops here, and label is\n    // needed to break out of the second one\n    //\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    for (;;) {\n      prevEmptyEnd = false;\n\n      token          = state.push('dt_open', 'dt', 1);\n      token.map      = [ dtLine, dtLine ];\n\n      token          = state.push('inline', '', 0);\n      token.map      = [ dtLine, dtLine ];\n      token.content  = state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim();\n      token.children = [];\n\n      token          = state.push('dt_close', 'dt', -1);\n\n      for (;;) {\n        token     = state.push('dd_open', 'dd', 1);\n        token.map = itemLines = [ nextLine, 0 ];\n\n        pos = contentStart;\n        max = state.eMarks[ddLine];\n        offset = state.sCount[ddLine] + contentStart - (state.bMarks[ddLine] + state.tShift[ddLine]);\n\n        while (pos < max) {\n          ch = state.src.charCodeAt(pos);\n\n          if (isSpace(ch)) {\n            if (ch === 0x09) {\n              offset += 4 - offset % 4;\n            } else {\n              offset++;\n            }\n          } else {\n            break;\n          }\n\n          pos++;\n        }\n\n        contentStart = pos;\n\n        oldTight = state.tight;\n        oldDDIndent = state.ddIndent;\n        oldIndent = state.blkIndent;\n        oldTShift = state.tShift[ddLine];\n        oldSCount = state.sCount[ddLine];\n        oldParentType = state.parentType;\n        state.blkIndent = state.ddIndent = state.sCount[ddLine] + 2;\n        state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n        state.sCount[ddLine] = offset;\n        state.tight = true;\n        state.parentType = 'deflist';\n\n        state.md.block.tokenize(state, ddLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n        state.tShift[ddLine] = oldTShift;\n        state.sCount[ddLine] = oldSCount;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n        state.blkIndent = oldIndent;\n        state.ddIndent = oldDDIndent;\n\n        token = state.push('dd_close', 'dd', -1);\n\n        itemLines[1] = nextLine = state.line;\n\n        if (nextLine >= endLine) { break OUTER; }\n\n        if (state.sCount[nextLine] < state.blkIndent) { break OUTER; }\n        contentStart = skipMarker(state, nextLine);\n        if (contentStart < 0) { break; }\n\n        ddLine = nextLine;\n\n        // go to the next loop iteration:\n        // insert DD tag and repeat checking\n      }\n\n      if (nextLine >= endLine) { break; }\n      dtLine = nextLine;\n\n      if (state.isEmpty(dtLine)) { break; }\n      if (state.sCount[dtLine] < state.blkIndent) { break; }\n\n      ddLine = dtLine + 1;\n      if (ddLine >= endLine) { break; }\n      if (state.isEmpty(ddLine)) { ddLine++; }\n      if (ddLine >= endLine) { break; }\n\n      if (state.sCount[ddLine] < state.blkIndent) { break; }\n      contentStart = skipMarker(state, ddLine);\n      if (contentStart < 0) { break; }\n\n      // go to the next loop iteration:\n      // insert DT and DD tags and repeat checking\n    }\n\n    // Finilize list\n    token = state.push('dl_close', 'dl', -1);\n\n    listLines[1] = nextLine;\n\n    state.line = nextLine;\n\n    // mark paragraphs tight if needed\n    if (tight) {\n      markTightParagraphs(state, listTokIdx);\n    }\n\n    return true;\n  }\n\n\n  md.block.ruler.before('paragraph', 'deflist', deflist, { alt: [ 'paragraph', 'reference' ] });\n};\n"},"lineCount":229}},"error":null,"hash":"d1885d90bb2f7fcaabdb0b669f597b71","cacheData":{"env":{}}}